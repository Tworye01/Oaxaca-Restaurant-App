{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/baskets/items/": {
            "post": {
                "description": "Gets data from the request body and item information from the database, calculates the total cost, and returns the basket items",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "basket"
                ],
                "summary": "Adds items to basket",
                "parameters": [
                    {
                        "description": "JSON object representing the basket",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Basket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/baskets/pay/{table}": {
            "post": {
                "description": "Gets item information from basket and table number, calculates total cost, adds orders \u0026 bill to database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "basket"
                ],
                "summary": "Posts table's bill based on basket",
                "parameters": [
                    {
                        "description": "JSON object representing the basket",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Basket"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "table number",
                        "name": "table",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/bill/orders/{id}": {
            "get": {
                "description": "Returns a status, depending on if the Bill and Orders were successfully fetched",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bill"
                ],
                "summary": "Gets a bill and its orders",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "id of the bill",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/bills": {
            "patch": {
                "description": "Returns a status, depending on if the bill was updated successfully or not",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bill"
                ],
                "summary": "Patches a bill",
                "parameters": [
                    {
                        "description": "JSON object of an order to be updated",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/bills/{id}": {
            "get": {
                "description": "Returns a status, depending on if the bill was retrieved successfully or not",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bill"
                ],
                "summary": "Gets bill from its id",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "id of the bill",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/dishes": {
            "put": {
                "description": "Puts an dish, if it does not exist it is added otherwise it updates the order of the same ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dishes"
                ],
                "summary": "Put a dish",
                "parameters": [
                    {
                        "description": "JSON object of an order to be added or updated",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Dish"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/health": {
            "get": {
                "description": "Returns the status of the middleware",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Get the health",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "description": "Logs user in if valid login details are given and returns a login token.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "login"
                ],
                "summary": "Authenticates user",
                "parameters": [
                    {
                        "description": "user's login details",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "561": {
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/login/credentials": {
            "patch": {
                "description": "Updates user based on their credentials",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Updates a user",
                "parameters": [
                    {
                        "description": "user details",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Credentials"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/login/credentials/": {
            "post": {
                "description": "Posts a user into the database",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Posts a user",
                "parameters": [
                    {
                        "description": "user details",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Credentials"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/login/credentials/{username}": {
            "get": {
                "description": "Returns the user based on their username",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Gets a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/login/credentials/{user}": {
            "delete": {
                "description": "Deletes the user via their username",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Deletes a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "username",
                        "name": "user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/menu": {
            "get": {
                "description": "Returns all the Dishes and Drinks, regardless of availability",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "menu"
                ],
                "summary": "Get the entire Menu",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/menu/dishes": {
            "patch": {
                "description": "Updates the dish on the ID",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "dishes"
                ],
                "summary": "Updates a dish",
                "parameters": [
                    {
                        "description": "JSON object of an order to be added or updated",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Dish"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/menu/dishes/": {
            "get": {
                "description": "Returns the json of all dishes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dishes"
                ],
                "summary": "Lists all the dishes",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Posts a dish into the database",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "dishes"
                ],
                "summary": "Posts a dish",
                "parameters": [
                    {
                        "description": "JSON object of an order to be added or updated",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Dish"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/menu/dishes/query": {
            "get": {
                "description": "Goes to the image/menu/... directory and sends the file.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "filter"
                ],
                "summary": "Get the static images for the file directory",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "spice",
                        "name": "query",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "course",
                        "name": "query",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "allergens",
                        "name": "query",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "calories",
                        "name": "query",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/menu/dishes/{id}": {
            "get": {
                "description": "Returns the dish based on its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dishes"
                ],
                "summary": "Gets a dish",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the dish",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Deletes the dish on the ID",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "dishes"
                ],
                "summary": "Deletes a dish",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the dish",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/menu/drinks": {
            "get": {
                "description": "Returns the json of drinks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drinks"
                ],
                "summary": "Lists all the drinks",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "description": "Puts an drink, if it does not exist it is added otherwise it updates the order of the same ID",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "drinks"
                ],
                "summary": "Put a drink",
                "parameters": [
                    {
                        "description": "JSON object of an order to be added or updated",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Drink"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Added a drink to the database regardless if it alread exists or not",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "drinks"
                ],
                "summary": "Posts a drink",
                "parameters": [
                    {
                        "description": "JSON object of an order to be added or updated",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Drink"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/menu/drinks.{id}": {
            "put": {
                "description": "Gets a drink, using the primary key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drinks"
                ],
                "summary": "Gets a drink",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the dish",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/menu/drinks/{id}": {
            "delete": {
                "description": "Deletes a drink using it's ID",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "drinks"
                ],
                "summary": "Deletes a drink",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the dish",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "description": "Updates the drink at the certain ID",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "drinks"
                ],
                "summary": "Updates a drink",
                "parameters": [
                    {
                        "description": "JSON object of an order to be added or updated",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Drink"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/order/{table}": {
            "get": {
                "description": "Creates a customer and assigns them to a table",
                "tags": [
                    "websocket"
                ],
                "summary": "Creates a customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "table number",
                        "name": "table",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/orders": {
            "get": {
                "description": "Returns a JSON object of all orders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get a list of all orders",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "put": {
                "description": "Puts an order, if it does not exist it is added otherwise it updates the order of the same ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Put an order",
                "parameters": [
                    {
                        "description": "JSON object of an order to be added or updated",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "description": "Adds an order if it does not already exist in the orders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Post an order",
                "parameters": [
                    {
                        "description": "JSON object of an order to be added",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "description": "Updates the data of a currently existing order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Patch an order",
                "parameters": [
                    {
                        "description": "JSON object of an order to be updated",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/orders/{id}": {
            "get": {
                "description": "Returns a JSON object of the order of the given ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get a specific order",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "id of the order",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "description": "Returns a status, depending on if the Order was deleted successfully or not",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Delete a specific order",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "id of the order",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/orders/{id}/status": {
            "get": {
                "description": "Returns the status of the given order ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get the status of a specific order",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "id of the order",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/orders/{id}/{status}": {
            "patch": {
                "description": "Returns the status of the given order ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Updates the status of a specific order",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "id of the order",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "status of the order",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/staff/manager": {
            "get": {
                "description": "Creates a manager and assigns them to all tables",
                "tags": [
                    "websocket"
                ],
                "summary": "Creates a manager",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/staff/{table}": {
            "get": {
                "description": "Creates a waiter and assigns them to a table",
                "tags": [
                    "websocket"
                ],
                "summary": "Creates a waiter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "table number",
                        "name": "table",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/table/bills/{table}": {
            "get": {
                "description": "Fetches the bill for specific table number and returns it.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "table"
                ],
                "summary": "Gets bill for a specific table",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "table number",
                        "name": "table",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/v1/table/orders/{table}": {
            "get": {
                "description": "Fetches the orders for specific table number and returns them.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "table"
                ],
                "summary": "Gets orders for a specific table",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "table number",
                        "name": "table",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/images/{dir}/{file}": {
            "get": {
                "description": "Goes to the image/menu/... directory and sends the file.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Get the static images for the file directory",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "dishes or drinks",
                        "name": "dir",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "name of the file",
                        "name": "file",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Takes the file and saves it into the path",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Posts the image into the file directory",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "dishes or drinks",
                        "name": "dir",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "name of the file",
                        "name": "file",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Basket": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BasketItem"
                    }
                }
            }
        },
        "models.BasketItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "itemId": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "models.Credentials": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.Role"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Dish": {
            "type": "object"
        },
        "models.Drink": {
            "type": "object"
        },
        "models.Order": {
            "type": "object"
        },
        "models.Role": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-comments": {
                "Admin": "4",
                "Customer": "0",
                "Kitchen": "2",
                "Manager": "3",
                "Waiter": "1"
            },
            "x-enum-varnames": [
                "Customer",
                "Waiter",
                "Kitchen",
                "Manager",
                "Admin"
            ]
        }
    }
}